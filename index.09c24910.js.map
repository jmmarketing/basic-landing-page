{"mappings":"AAAA,4DAA4D;AAC5D,uBAAuB;AACvB,iBAAiB;AACjB,sBAAsB;AAEtB,mCAAmC;AAEnC,kBAAkB;AAClB,kBAAkB;AAClB,mBAAmB;AAEnB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,MAAM,SAAS,SAAS,aAAa,CAAC;AACtC,MAAM,WAAW,SAAS,aAAa,CAAC;AACxC,MAAM,SAAS,SAAS,aAAa,CAAC;AAEtC,SAAS,gBAAgB,CAAC,SAAS,CAAC;IAClC,IAAI,EAAE,MAAM,IAAI,QACd,kCAAkC;IAClC,SAAS,SAAS,CAAC,MAAM,CAAC;SACrB,SAAS,SAAS,CAAC,MAAM,CAAC;IAEjC,IAAI,EAAE,MAAM,CAAC,SAAS,IAAI,wBAAwB;QAChD,OAAO,SAAS,GAAG,EAAE,MAAM,CAAC,SAAS;QACrC,QAAQ,GAAG,CAAC,EAAE,MAAM;IACtB;AACF;AAEA,gBAAgB;AAChB,yBAAyB;AACzB,gBAAgB;AAChB,MAAM,OAAO,SAAS,aAAa,CAAC;AACpC,MAAM,YAAY,SAAS,aAAa,CAAC;AACzC,MAAM,YAAY,SAAS,aAAa,CAAC;AACzC,MAAM,aAAa,SAAS,aAAa,CAAC;AAE1C,MAAM,gBAAgB;IACpB,MAAM;IACN,OAAO;AACT;AAEA,MAAM,kBAAkB,IAAI,IAAI;IAC9B;QAAC;QAAW;YAAE,SAAS;YAAoB,UAAU;QAAO;KAAE;IAC9D;QACE;QACA;YACE,SAAS;YACT,UAAU;QACZ;KACD;CACF;AAED,SAAS,sBAAsB,KAAK,EAAE,OAAO,EAAE,SAAS;IACtD,MAAM,WAAW,MAAM,KAAK;IAC5B,MAAM,UAAU,QAAQ,IAAI,CAAC;IAE7B,IAAI,SAAS;QACX,MAAM,SAAS,CAAC,GAAG,CAAC;QACpB,MAAM,SAAS,CAAC,MAAM,CAAC;QACvB,aAAa,CAAC,UAAU,GAAG;IAC7B,OAAO;QACL,MAAM,SAAS,CAAC,GAAG,CAAC;QACpB,MAAM,SAAS,CAAC,MAAM,CAAC;QACvB,aAAa,CAAC,UAAU,GAAG;IAC7B;AACF;AAEA,SAAS,WAAW,CAAC;IACnB,MAAM,SAAS,EAAE,MAAM,IAAI;IAC3B,MAAM,OAAO,gBAAgB,GAAG,CAAC;IACjC,IAAI,MAAM,sBAAsB,QAAQ,KAAK,OAAO,EAAE,KAAK,QAAQ;AACrE;AAEA;IAAC;IAAW;CAAW,CAAC,OAAO,CAAC,CAAC,QAC/B,MAAM,gBAAgB,CAAC,UAAU;AAGnC,KAAK,gBAAgB,CAAC,UAAU,CAAC;IAC/B,EAAE,cAAc;IAChB,MAAM,UAAU,CAAC,OAAO,MAAM,CAAC,eAAe,QAAQ,CAAC;IACvD,QAAQ,GAAG,CAAC;IAEZ,IAAI,CAAC,SAAS;QACZ,4BAA4B;QAC5B;YAAC;YAAW;SAAW,CAAC,OAAO,CAAC,CAAC,QAAU,WAAW;QACtD;IACF;IAEA,8DAA8D;IAC9D,MAAM,OAAO,IAAI,SAAS,MAAM;IAChC,MAAM,UAAU,OAAO,WAAW,CAAC,KAAK,OAAO;IAC/C,QAAQ,GAAG,CAAC;IACZ,SAAS,gBAAgB,CAAC,SAAS,OAAO,CAAC,CAAC;QAC1C,MAAM,KAAK,GAAG;QACd,MAAM,SAAS,CAAC,MAAM,CAAC;IACzB;AACF","sources":["src/js/script.js"],"sourcesContent":["// Starting build out of from interaction & countdown logic.\r\n//#####################\r\n//Countdown Timer\r\n//####################\r\n\r\n// setInterval(runCountdown, 1000);\r\n\r\n// ###############\r\n// ### FORM JS ###\r\n// ################\r\n\r\n// +++++++++++++\r\n//Form drop down\r\n//++++++++++++++\r\nconst select = document.querySelector(\".form__select\");\r\nconst dropdown = document.querySelector(\".form__select-dropdown\");\r\nconst option = document.querySelector(\".form__select--option\");\r\n\r\ndocument.addEventListener(\"click\", (e) => {\r\n  if (e.target == select) {\r\n    // console.log(\"Select Clicked!\");\r\n    dropdown.classList.toggle(\"show\");\r\n  } else dropdown.classList.remove(\"show\");\r\n\r\n  if (e.target.className == \"form__select--option\") {\r\n    select.innerHTML = e.target.innerHTML;\r\n    console.dir(e.target);\r\n  }\r\n});\r\n\r\n//++++++++++++++\r\n//Form Submit / Validaton\r\n//++++++++++++++\r\nconst form = document.querySelector(\"form\");\r\nconst submitBtn = document.querySelector(\".button--submit\");\r\nconst nameInput = document.querySelector(\"#field_name\");\r\nconst emailInput = document.querySelector(\"#field_email\");\r\n\r\nconst requiredState = {\r\n  name: false,\r\n  email: false,\r\n};\r\n\r\nconst validationRules = new Map([\r\n  [nameInput, { pattern: /^[A-Za-z\\s]{3,}$/, stateKey: \"name\" }],\r\n  [\r\n    emailInput,\r\n    {\r\n      pattern: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\r\n      stateKey: \"email\",\r\n    },\r\n  ],\r\n]);\r\n\r\nfunction validateInputUpdateUI(input, pattern, stateProp) {\r\n  const inputVal = input.value;\r\n  const isValid = pattern.test(inputVal);\r\n\r\n  if (isValid) {\r\n    input.classList.add(\"pass\");\r\n    input.classList.remove(\"fail\");\r\n    requiredState[stateProp] = true;\r\n  } else {\r\n    input.classList.add(\"fail\");\r\n    input.classList.remove(\"pass\");\r\n    requiredState[stateProp] = false;\r\n  }\r\n}\r\n\r\nfunction checkInput(e) {\r\n  const target = e.target || e;\r\n  const rule = validationRules.get(target);\r\n  if (rule) validateInputUpdateUI(target, rule.pattern, rule.stateKey);\r\n}\r\n\r\n[nameInput, emailInput].forEach((input) =>\r\n  input.addEventListener(\"change\", checkInput)\r\n);\r\n\r\nform.addEventListener(\"submit\", (e) => {\r\n  e.preventDefault();\r\n  const isValid = !Object.values(requiredState).includes(false);\r\n  console.log(isValid);\r\n\r\n  if (!isValid) {\r\n    //Catch Errors / Empty Input\r\n    [nameInput, emailInput].forEach((field) => checkInput(field));\r\n    return;\r\n  }\r\n\r\n  // Continue with submission (Does not send anywhere currently)\r\n  const data = new FormData(form, submitBtn);\r\n  const dataObj = Object.fromEntries(data.entries());\r\n  console.log(dataObj);\r\n  document.querySelectorAll(\"input\").forEach((input) => {\r\n    input.value = \"\";\r\n    input.classList.remove(\"pass\");\r\n  });\r\n});\r\n"],"names":[],"version":3,"file":"index.09c24910.js.map","sourceRoot":"/__parcel_source_root/"}